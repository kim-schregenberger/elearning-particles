{"version":3,"file":"step2-bolVKc_Y.js","sources":["../../src/step2.js"],"sourcesContent":["import * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport GUI from 'lil-gui'\n\n/**\n * Base\n */\n// Debug\nconst gui = new GUI()\n\n// hide GUI\ngui.domElement.style.display = 'none';\n\n// Toggle GUI visibility when pressing 'h'\ndocument.addEventListener('keydown', (event) => {\n    if (event.key === 'h' || event.key === 'H') {\n        const guiContainer = gui.domElement;\n        if (guiContainer.style.display === 'none') {\n            guiContainer.style.display = 'block';\n        } else {\n            guiContainer.style.display = 'none';\n        }\n    }\n});\n\n\n// Canvas\nconst canvas = document.querySelector('canvas.webgl')\n\n// Scene\nconst scene = new THREE.Scene()\n\n/**\n * Textures\n */\nconst textureLoader = new THREE.TextureLoader()\nconst particleTexture = textureLoader.load(\n    '/elearning-particles/textures/particles/1.png',\n    () => {\n        console.log('Texture loaded successfully.');\n    },\n    undefined,\n    (error) => {\n        console.error('Error loading texture:', error);\n    }\n);\n\n\n/**\n * Particles\n */\n// Geometry\nconst particlesGeometry = new THREE.BufferGeometry();\nconst count = 50000;\n\n// Arrays to hold positions and colors\nconst positions = new Float32Array(count * 3);\nconst colors = new Float32Array(count * 3);\n\n// Radius of the sphere\nconst radius = 5;\n\nfor (let i = 0; i < count; i++) {\n    // Generate random spherical coordinates\n    const theta = Math.random() * 2 * Math.PI; // Azimuthal angle\n    const phi = Math.acos(2 * Math.random() - 1); // Polar angle\n    const r = Math.cbrt(Math.random()) * radius; // Radius\n\n    // Convert spherical coordinates to Cartesian coordinates\n    const x = r * Math.sin(phi) * Math.cos(theta);\n    const y = r * Math.sin(phi) * Math.sin(theta);\n    const z = r * Math.cos(phi);\n\n    // Set positions\n    positions[i * 3] = x;\n    positions[i * 3 + 1] = y;\n    positions[i * 3 + 2] = z;\n\n    // Set colors (random RGB)\n    colors[i * 3] = Math.random();\n    colors[i * 3 + 1] = Math.random();\n    colors[i * 3 + 2] = Math.random();\n}\n\n// Create and set attributes\nparticlesGeometry.setAttribute('position', new THREE.BufferAttribute(positions, 3));\nparticlesGeometry.setAttribute('color', new THREE.BufferAttribute(colors, 3));\n\n\n// Material\nconst particlesMaterial = new THREE.PointsMaterial()\n\nparticlesMaterial.size = 0.08\nparticlesMaterial.color = new THREE.Color('#4682B4')\n\n\n// Points\nconst particles = new THREE.Points(particlesGeometry, particlesMaterial)\nscene.add(particles)\n\n/**\n * Sizes\n */\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nwindow.addEventListener('resize', () =>\n{\n    // Update sizes\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n\n    // Update camera\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    // Update renderer\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n/**\n * Camera\n */\n// Base camera\nconst camera = new THREE.PerspectiveCamera(75, sizes.width / sizes.height, 0.1, 100)\ncamera.position.z = -12\nscene.add(camera)\n\n// Controls\nconst controls = new OrbitControls(camera, canvas)\ncontrols.enableDamping = true\ncontrols.enableZoom = false\n\n/**\n * Renderer\n */\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n\n/**\n * Animate\n */\nconst clock = new THREE.Clock()\n\nconst tick = () =>\n{\n    const elapsedTime = clock.getElapsedTime()\n\n// Update particles\n\n\n    // Update controls\n    controls.update()\n\n    // Render\n    renderer.render(scene, camera)\n\n    // Call tick again on the next frame\n    window.requestAnimationFrame(tick)\n}\n\ntick()\n\n\n// ----------------------------------------------------------------------------------------\n\n// Code trigger\ndocument.getElementById('toggleCode').addEventListener('click', function() {\n    var codeBlock = document.getElementById('codeBlock');\n    if (codeBlock.classList.contains('hidden')) {\n        codeBlock.classList.remove('hidden');\n        this.textContent = 'hide code'; // Optionally change button text\n    } else {\n        codeBlock.classList.add('hidden');\n        this.textContent = 'show code'; // Optionally change button text\n    }\n});\n\n// ----------------------------------------------------------------------------------------"],"names":["gui","GUI","event","guiContainer","canvas","scene","THREE.Scene","textureLoader","THREE.TextureLoader","error","particlesGeometry","THREE.BufferGeometry","count","positions","colors","radius","i","theta","phi","r","x","y","z","THREE.BufferAttribute","particlesMaterial","THREE.PointsMaterial","THREE.Color","particles","THREE.Points","sizes","camera","renderer","THREE.PerspectiveCamera","controls","OrbitControls","THREE.WebGLRenderer","clock","THREE.Clock","tick","codeBlock"],"mappings":"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"}